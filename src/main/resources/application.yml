spring:
  security:
    oauth2:
      client:
        registration:
          discord:
            client-id: 1310700970316922990
            client-secret: ${DISCORD_CLIENT_SECRET}
            redirect-uri: http://localhost:8080/oauth2/callback/discord
            scope: identify, email
            authorization-grant-type: authorization_code
          google:
            client-id: 282635553570-0pf2544q5ksv6ajqns8qb8md775cfqn8.apps.googleusercontent.com
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: http://localhost:8080/oauth2/callback/google
            scope: openid, profile, email
            authorization-grant-type: authorization_code
        provider:
          discord:
            authorization-uri: https://discord.com/api/oauth2/authorize
            token-uri: https://discord.com/api/oauth2/token
            user-info-uri: https://discord.com/api/users/@me
            user-name-attribute: username
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: name

  datasource:
    url: jdbc:postgresql://localhost:5432/custom_demonlist
    username: postgres
    password: ${POSTGRES_PASSWORD}
    driver-class-name: org.postgresql.Driver

  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect

  sql:
    init:
      mode: always
server:
  port: 8080
